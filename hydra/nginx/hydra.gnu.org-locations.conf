# Configuration of the various locations at hydra.gnu.org.
# This file is meant to be included in the main configuration file.

location / {
    proxy_pass http://127.0.0.1:3000;
}

location /api {
    # For the sake of the JS code at http://gnu.org/s/guix/packages.
    add_header 'Access-Control-Allow-Origin' '$scheme://www.gnu.org';
    proxy_pass http://127.0.0.1:3000;
}

# Longer timeouts to allow practical https access to Hydra's admin interface.
location /eval   { proxy_pass http://127.0.0.1:3000; proxy_read_timeout 360s; }
location /evals  { proxy_pass http://127.0.0.1:3000; proxy_read_timeout 240s; }
location /jobset { proxy_pass http://127.0.0.1:3000; proxy_read_timeout 240s; }
location /build  { proxy_pass http://127.0.0.1:3000; proxy_read_timeout 120s; }

# FIXME: The "nix-store --dump â€¦/texlive-texmf | bzip2" processes
# rarely complete, so skip them for now.
location ~ ^/nar/.*-(texlive-texmf-|texlive-20150523-texmf) {
    # We used to return 503 ("Service temporarily unavailable") but
    # users were led to think it would come back later.
    return 410;
    break;
}

location /nar/ {
    proxy_pass http://127.0.0.1:3000;

    client_body_buffer_size 256k;

    # Enable caching for nar files, to avoid reconstructing and recompressing
    # archives.
    proxy_cache nar;
    proxy_cache_valid 200 15d;  # cache hits for 15 days.
    proxy_cache_valid 504 3m;   # timeout, when the machine is overloaded
    proxy_cache_valid any 1m;   # cache misses/others for 1 min.

    proxy_ignore_client_abort on;

    # Be more tolerant of delays when fetching a nar.  Using a shorter
    # timeout leads to users retrying, which in turns triggers another
    # "nix-store --dump foo | bzip2" process, which quickly brings the
    # machine down.
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;

    # Disable chunked encoding to avoid enormous chunks.
    #chunked_transfer_encoding off;

    # Nars are already compressed.
    gzip off;

    # We need to hide and ignore the Set-Cookie header
    # to enable caching.
    proxy_hide_header    Set-Cookie;
    proxy_ignore_headers Set-Cookie;

    # Provide a 'content-length' header so that 'guix substitute-binary'
    # knows upfront how much it is downloading.
    #add_header Content-Length $body_bytes_sent;
}

location ~ /(nix-cache-info|static|logo|favicon\.ico) {
    proxy_pass http://127.0.0.1:3000;

    # Cache this file since that's always the first thing we ask for.
    proxy_cache static;
    proxy_cache_valid 200 10d;   # cache hits for a looong time.
    proxy_cache_valid any 5m;    # cache misses/others for 5 min.
    proxy_ignore_client_abort on;

    # We need to hide and ignore the Set-Cookie header
    # to enable caching.
    proxy_hide_header    Set-Cookie;
    proxy_ignore_headers Set-Cookie;

    # Tell browsers to cache these things.
    expires 10d;
}

location ~ \.narinfo$ {
    proxy_pass http://127.0.0.1:3000;

    # For HTTP pipelining.  This has a dramatic impact on performance.
    client_body_buffer_size 128k;

    # Do not tolerate slowness of hydra.gnu.org when fetching
    # narinfos: better return 504 quickly than wait forever.  However,
    # since hydra.gnu.org is often overloaded, keep the timeouts not
    # too small.
    proxy_connect_timeout 4s;
    proxy_read_timeout 6s;
    proxy_send_timeout 6s;

    # Enable caching for narinfo files, to avoid recomputing nar signatures.
    proxy_cache narinfo;
    proxy_cache_valid 200 14d;  # cache hits for 14 days.
    proxy_cache_valid 504 2m;	# timeout, when hydra.gnu.org is overloaded
    proxy_cache_valid any 1m;   # cache misses/others for 1 min.

    # Add 'Expires' and 'Cache-Control' response headers so clients
    # such as 'guix substitute' know how long they can cache it.
    expires 5d;

    proxy_ignore_client_abort on;

    # We need to hide and ignore the Set-Cookie header
    # to enable caching.
    proxy_hide_header    Set-Cookie;
    proxy_ignore_headers Set-Cookie;
}

# Content-addressed files served by 'guix publish'.  No need to cache
# it because it is served right from the store without any additional
# processing.
location /file/ {
    # Launch as 'guix publish -p 9999 -u nobody --listen=127.0.0.1'.
    proxy_pass http://127.0.0.1:9999;

    proxy_connect_timeout 3s;
}

# For use by Certbot.
location /.well-known {
    root /var/www;
}
